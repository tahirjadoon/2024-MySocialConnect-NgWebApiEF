// <auto-generated />
using System;
using MSC.Core.DB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MSC.WebApi.DbFile.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("MSC.Core.DB.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("City")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(12);

                    b.Property<string>("Country")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(13);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(15);

                    b.Property<DateOnly>("DateOfBirth")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(6);

                    b.Property<string>("DisplayName")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(7);

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(8);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("Interests")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(11);

                    b.Property<string>("Introduction")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("LastActive")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(14);

                    b.Property<string>("LookingFor")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(10);

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnOrder(4);

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("BLOB")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(16);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.HasIndex("Guid");

                    b.HasIndex("UserName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<int>("AppUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsMain")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(3);

                    b.Property<string>("PublicId")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.Property<string>("Url")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.UserLike", b =>
                {
                    b.Property<int>("SourceUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TargetUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SourceUserId", "TargetUserId");

                    b.HasIndex("TargetUserId");

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.UserMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<DateTime?>("DateMessageRead")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("DateMessageSent")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(10);

                    b.Property<Guid>("Guid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.Property<string>("MessageContent")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(9);

                    b.Property<bool>("RecipientDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(8);

                    b.Property<int>("RecipientId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(6);

                    b.Property<string>("RecipientUserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(7);

                    b.Property<bool>("SenderDeleted")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(5);

                    b.Property<int>("SenderId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(3);

                    b.Property<string>("SenderUserName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.HasIndex("Guid");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.Photo", b =>
                {
                    b.HasOne("MSC.Core.DB.Entities.AppUser", "AppUser")
                        .WithMany("Photos")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.UserLike", b =>
                {
                    b.HasOne("MSC.Core.DB.Entities.AppUser", "SourceUser")
                        .WithMany("LikedUsers")
                        .HasForeignKey("SourceUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSC.Core.DB.Entities.AppUser", "TargetUser")
                        .WithMany("LikedByUsers")
                        .HasForeignKey("TargetUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceUser");

                    b.Navigation("TargetUser");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.UserMessage", b =>
                {
                    b.HasOne("MSC.Core.DB.Entities.AppUser", "Recipient")
                        .WithMany("MessagesReceived")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MSC.Core.DB.Entities.AppUser", "Sender")
                        .WithMany("MessagesSent")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("MSC.Core.DB.Entities.AppUser", b =>
                {
                    b.Navigation("LikedByUsers");

                    b.Navigation("LikedUsers");

                    b.Navigation("MessagesReceived");

                    b.Navigation("MessagesSent");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
